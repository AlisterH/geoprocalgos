# -*- coding: utf-8 -*-
"""
/***************************************************************************
                        A QGIS Processing plugin provider
                           for GeoProc.com algorithms

 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2019-05-19
        copyright            : (C) 2019-2022 by GeoProc.com
        email                : info@geoproc.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 3 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
WARNING: code formatting does not follow pycodestyle recommendations
"""

__author__ = 'GeoProc.com'
__date__ = '2019-05-19'
__copyright__ = '(C) 2019-2022 by GeoProc.com'
__revision__ = '$Format:%H$'

import os
from qgis.PyQt.QtGui import QIcon
from qgis.core import QgsProcessingProvider

from .bcASEGgdf_algorithm          import bcASEGgdfAlgorithm
from .bcCBar_algorithm             import bcCBarAlgorithm
from .bcclr2tbl_algorithm          import bcclr2tblAlgorithm
from .bcCMap_algorithm             import bcCMapAlgorithm
from .bcFPPL_algorithm             import bcFPPLAlgorithm
from .bcFPStats_algorithm          import bcFPStatsAlgorithm
from .bcFPPT_algorithm             import bcFPPTAlgorithm
from .bcFP_algorithm               import bcFPAlgorithm
from .bcGenRNDSurveyData_algorithm import bcGenRNDSurveyDataAlgorithm
#from .bcigrf_algorithm             import bcigrfAlgorithm
#from .bcigrfraster_algorithm       import bcigrfrasterAlgorithm
from .bcInterpies4QGIS_algorithm   import bcInterpies4QGISAlgorithm
from .bcLenDir_algorithm           import bcLenDirAlgorithm
from .bcMAT2TIF_algorithm          import bcMAT2TIFAlgorithm
from .bcMultiStyles_algorithm      import bcMultiStylesAlgorithm
from .bcSaveqml_algorithm          import bcSaveqmlAlgorithm
from .bcStackP_algorithm           import bcStackPAlgorithm
from .bcSunshade_algorithm         import bcSunshadeAlgorithm
from .bcSwapYZ_algorithm           import bcSwapYZAlgorithm
from .bcxxdum_Algorithm            import bcxxdumAlgorithm
plugin_path = os.path.dirname(__file__)

class thelists(object):
    """ Return some info from current algorithms used to build menu/toolbar. """
    #
    # algorithms to load
    alglist = [bcCBarAlgorithm(),
               bcclr2tblAlgorithm(),
               bcCMapAlgorithm(),
               bcSunshadeAlgorithm(),
               bcInterpies4QGISAlgorithm(),
#               bcigrfAlgorithm(),
#               bcigrfrasterAlgorithm(),
               bcMAT2TIFAlgorithm(),
               bcASEGgdfAlgorithm(),
               bcStackPAlgorithm(),
               bcSwapYZAlgorithm(),
               bcLenDirAlgorithm(),
               bcSaveqmlAlgorithm(),
               bcMultiStylesAlgorithm(),
               bcGenRNDSurveyDataAlgorithm(),
               bcFPPLAlgorithm(),
               bcFPStatsAlgorithm(),
               bcFPPTAlgorithm(),
               bcFPAlgorithm(),
               bcxxdumAlgorithm(),
              ]

    def get_alglist(self):
        return self.alglist

    def get_icons(self):
        # icons for each of above algorithms
        return [alg._ico for alg in self.alglist]

    def get_tooltips(self):
        # tooltip for each of above algorithms
        return [alg._the_strings["ALGONAME"] for alg in self.alglist]

    def get_algo(self):
        # algorithm name for each of above algorithms
        algname = {}
        for alg in self.alglist:
            algname[alg._the_strings["ALGONAME"]] = alg.name()
        return algname
#=========================================================================================

class geoprocProvider(QgsProcessingProvider):

    def __init__(self):
        """ Initialisation. """
        #
        super().__init__()
        self.alglist = thelists.alglist
    #-------------------------------------------------------------------------------------

    def icon(self):
        """ Returns a QIcon for the algorithm. """
        #
        return QIcon(os.path.join(plugin_path, 'res/geoproc.svg'))
    #-------------------------------------------------------------------------------------

    def svgIconPath(self):
        """ Returns a path to an SVG version of the algorithm's icon. """
        #
        return os.path.join(plugin_path, 'res/geoproc.svg')
    #-------------------------------------------------------------------------------------

    def unload(self):
        """ Unloads the provider. Any tear-down steps required by the provider should be
            implemented here.
        """
        #
        pass
    #-------------------------------------------------------------------------------------

    def loadAlgorithms(self):
        """ Loads all algorithms belonging to this provider. """
        #
        for alg in self.alglist:
            self.addAlgorithm( alg )
    #-------------------------------------------------------------------------------------

    def id(self):
        """ Returns the unique provider id, used for identifying the provider. """
        #
        return 'GeoProc'
    #-------------------------------------------------------------------------------------

    def name(self):
        """ Returns the provider name, which is used to describe the provider within
            the GUI. """
        #
        return 'GeoProc'
    #-------------------------------------------------------------------------------------

    def longName(self):
        """ Returns a longer version of the provider name. """
        #
        return 'GeoProc provider: collection of QGIS V3.x Processing algorithms.'
#=========================================================================================